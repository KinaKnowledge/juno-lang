
(defglobal main_menu_button nil) ;; placeholder

(defun make_menu (for_element menu_items)
  (let
      ((menu_items menu_items)
       (for_element for_element)
       (pos nil)
       (view nil))
    (setq view
          (div { `id: `cmenu `style: "position: absolute;" }
               (div {  `class: "pure-menu pure-menu-horizontal" `style: "box-shadow: 1px 1px 4px 0px #00000082" }               
                    (ul { `class: "pure-menu-list" }                 
                        (map (fn (item idx)                     
                               (li { `idx: idx `class: "pure-list-item" } (a { `idx: idx  `href: "#" `class: "pure-menu-link" } item.0)))
                             (or menu_items []))))))
    (when for_element
      (setq pos
            (-> for_element `getBoundingClientRect))
      (set_style [["top" (+ "" (Math.max 0 pos.bottom) "px") ]
                  ["left" (+ "" (Math.max pos.left 0) "px") ]] view)
      (console.log "POS:  " for_element pos))
    
    (attach_event_listener view
                           `click
                           (fn (e)
                             (progn
                              (defvar idx (-> e.srcElement `getAttribute `idx))
                              (defvar item (prop menu_items idx))
                             
                              (console.log "clicked item: " idx item item.1)
                               (when item
                                 (item.1 e))
                               (-> view `remove))))
    (-> (get_by_id "body") `appendChild view) 
    view))


(defun show_main_menu ()
  (let
      ((view nil))
    (setq view
          (make_menu main_menu_button
                     [["Save Image" (fn (e) (save_image)) ] ["Load Resource" (fn (e) (notify "Loading Resource")) ]]))))   
    
               

(defun user/*initializer* ()
  (let
      ((header nil))
       
    (console.log "user/*initializer is running.")
    (debug)
    (defglobal main_menu_button (button { `style: "margin-top: -5px" }
                                             (span { `style: "margin-top: -2px; font-weight: bold;" } "Î»")))
    
    (setq header (-> document `querySelector "header"))
    
    (-> header `appendChild main_menu_button)
    (-> header `appendChild (img { `style: "margin-left: 5px;margin-right: 10px;margin-top: 5px; " src: core/juno_logo height: "15" }))

    (attach_event_listener (get_by_id "juno_container") `click
                           (fn (e)
                             (progn
                              (defvar menu (get_by_id `cmenu))
                              (when menu (-> menu `remove)))))
    
    (set_prop *env_config*.export
	      `save_path
	      nil)
  
  (attach_event_listener main_menu_button
			      `click
			      (fn (e)
				(show_main_menu)))
  
  (notify (+ "Hello " *namespace* ))
  true))

  
